     public static class TreeNode{
		int val;
		TreeNode left;
		TreeNode right;
		
		public TreeNode(int value) {
			this.val = value;
		}
	}
	
	HashMap<Integer,Integer> map = new HashMap<>();

    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder==null||preorder.length==0) {
            return null;
        }

        for (int i = 0; i < inorder.length; i++) {
            map.put(inorder[i],i);
        }

        return build(0,preorder.length-1,preorder,0);
    }

    public TreeNode build(int start,int end,int[] preorder,int index) {
        if(start>end){
            return null;
        }
        TreeNode root = new TreeNode(preorder[start]);
        int rootindex = map.get(preorder[start]);
        int leftlength = rootindex-index;

        TreeNode left = build(start+1,start+leftlength,preorder,index);
        TreeNode right = build(start+leftlength+1,end,preorder,index+leftlength+1);
        root.left=left;
        root.right=right;
        return root;
    } 
	  
